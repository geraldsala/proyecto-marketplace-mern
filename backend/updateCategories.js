// updateCategories.js

// No se necesitan estas l√≠neas, ya que la URL se pondr√° directamente.
// const path = require('path');
// const dotenv = require('dotenv');
// dotenv.config({ path: path.resolve(__dirname, '../.env') });

const mongoose = require('mongoose');
const Product = require('./models/Product.js');
const Category = require('./models/categoryModel.js');

// Pega tu URL de MongoDB aqu√≠, entre comillas.
const DB_URI = 'mongodb+srv://gsalazarcordoba:Costarica19@cluster0.867rzf7.mongodb.net/marketplace_db?retryWrites=true&w=majority&appName=Cluster0';

const updateCategories = async () => {
  try {
    // Conexi√≥n a la base de datos
    await mongoose.connect(DB_URI);
    console.log('Conectado a MongoDB. ‚úÖ');

    const laptopCategory = await Category.findOne({ nombre: 'Port√°tiles' });

    if (!laptopCategory) {
      console.log('No se encontr√≥ la categor√≠a "Port√°tiles".');
      console.log('Por favor, crea la categor√≠a con el nombre "Port√°tiles" y vuelve a ejecutar este script.');
      return; 
    }

    const laptopCategoryId = laptopCategory._id;
    console.log(`Se encontr√≥ la categor√≠a "Port√°tiles" con el ID: ${laptopCategoryId}`);

    const result = await Product.updateMany(
      { categoria: new mongoose.Types.ObjectId('68a7b7b872eae1ed4d977b24') },
      { $set: { categoria: laptopCategoryId } }
    );

    console.log(`\nüéâ Se actualizaron exitosamente ${result.modifiedCount} productos. üéâ`);
    
  } catch (error) {
    console.error('Error al actualizar las categor√≠as:', error);
  } finally {
    mongoose.disconnect();
    console.log('\nDesconectado de MongoDB.');
  }
};

updateCategories();